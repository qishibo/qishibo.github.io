
# phalcon框架设置主从切换
的两种方法
1、modelsManager  比较固定，直接使用manager返回固定db service，性能会好点，但祥地来说比较死板
2、BaseModel 设置 可以单独设置每个model使用的db链接，适用于多个库中同名表操作的不同情境 更加灵活【但需要每个model挨个指定， 】

优先级
modelmanager>user->setwriteconser>baseModel->setwriteconser
modelsManager->setReadConnectionService($m, 'master')也行

========================

zephir 构建自己的php拓展
zephir init hhh
cd hhh
vi hhh/ttt.zep

```
namespace Hhh;

class ttt
{
    const HHH = "hahaha";

    public static function sum(int! a, int! b) -> int
    {
        return a+b;
    }
}

```
zephir build
Add extension=hhh.so to your php.ini
php -a
var_dump(Hhh\ttt::HHH);

====================

####  expect 脚本默认超时的坑

#!/usr/bin/expect

set timeout -1

spawn rsync -avzP  root@11.11.11.11:/root/gitlab-zh/data/backups/ /home/11/itlab_backup/

expect "*assword:*"
send "xxxxx\r\n"


#interact
expect eof

=================


/usr/lib/systemd/system/nginx.service  PrivateTmp=false tmp目录的坑

phpstorm快捷键设置 以及插件推荐

jenkins搭建 使用
# 基于docker的gitlab仓库搭建
# supervisord进程守护工具
cayley教程 基于 http://localhost:64210/docs/GremlinAPI  cayley mongo示例
    - ./cayley init -config cayley.cfg
    - ./cayley load -config cayley.cfg -quads data/testdata.nq
    - ./cayley http -config cayley.cfg

# redis geohash 使用

# libreoffice 生成pdf 转换图片 格式转化使用
    - brew cask install libreoffice
    - brew install ghostscript [gs]
    - brew install imagemagick [convert]

    yum install ImageMagick【http://www.imagemagick.org/script/download.php】

     ./soffice --convert-to pdf:writer_pdf_Export 2222.ppt
     convert  2222.pdf ppts.jpg

     updatedb【更新locate】

     ppt2pics.sh

    #sh ppt2pics.sh xxx.ppt jpg /home/shibo/imgs/

    soffice=/Applications/LibreOffice.app/Contents/MacOS
    # --convert-to pdf:writer_pdf_Export 2222.ppt

    $soffice/soffice --convert-to pdf:writer_pdf_Export $1
    pdf=`pwd`/`basename ${1%.*}`.pdf

    echo $pdf

    convert $pdf $3/`basename ${1%.*}`.$2



#https let's encrypt

    git clone https://github.com/certbot/certbot
    cd certbot
    ./certbot-auto --help

    ./certbot-auto certonly --webroot --agree-tos -v -t --email qii404@126.com -w /usr/share/nginx/html/air/public/ -d lanyundatong.com

    nginx.conf
    ssl on;
    ssl_certificate "/etc/letsencrypt/live/lanyundatong.com/fullchain.pem";
    ssl_certificate_key "/etc/letsencrypt/live/lanyundatong.com/privkey.pem";

    service nginx reatart

========================

gitlab runner install

官网： https://docs.gitlab.com/runner/install/linux-manually.html

install==
linux
1、
# Linux x86-64
sudo wget -O /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64

# Linux x86
sudo wget -O /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-386

# Linux arm
sudo wget -O /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-arm


2、sudo chmod +x /usr/local/bin/gitlab-runner
3、sudo useradd --comment 'GitLab Runner' --create-home gitlab-runner --shell /bin/bash
4、sudo gitlab-runner install --user=gitlab-runner --working-directory=/home/gitlab-runner
5、sudo gitlab-runner start


register

1、sudo gitlab-runner register
输入。。。


代码中增加.gitlab-ci.yml

形如　参考　https://segmentfault.com/a/1190000010442764
#before_script:
#  - apt install -y php7.0-cli

php-syn-check:
  tags:
    - my-tag
  script:
  - ./script/php_check.sh ./

================================

console颜色 https://www.cnblogs.com/clover-toeic/p/4031618.html
https://www.jianshu.com/p/bba963125f1a
